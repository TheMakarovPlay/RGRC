#include <iostream>
#include <fstream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <windows.h>
#include <string>
#include <iterator>

using namespace std;

struct human
{
	string name;
	string surname;
};

struct orders
{
	string name;
	string buy;
	double zaka;
};

struct tovari
{
	string tov;
	string material;
	string cvet;
	double razmer;
	double chena;
};

class tovar {
private:
	tovari to[10] = {
		{ "Гроб","Дуб","Черный",160,100000 },
		{ "Гроб","Кедр","Красно-белый",165,98000 },
		{ "Гроб","Бук","Черный",170,105000 },
	};
public:
	ofstream fout;
	ifstream fin;
	int n = 3;
	void Print() {
		for (int i = 0; i < n; i++) {
			cout << setw(4) << " Наименование товара:" << setw(11) << (to + i)->tov;
			cout << setw(4) << " Материал:" << setw(11) << (to + i)->material;
			cout << setw(4) << " Цвет:" << setw(20) << (to + i)->cvet;
			cout << setw(4) << " Размер:" << setw(11) << (to + i)->razmer;
			cout << setw(4) << " Цена:" << setw(11) << (to + i)->chena << endl;
		}
	}

	void add() {
		if (n == 10) {
			cout << "!Список товаров полон!" << endl;
			return;
		}
		cout << "Наименование товара:" << endl;
		cin >> to[n].tov;
		cout << "Материал:" << endl;
		cin >> to[n].material;
		cout << "Цвет:" << endl;
		cin >> to[n].cvet;
		cout << "Размер:" << endl;
		cin >> to[n].razmer;
		cout << "Цена:" << endl;
		cin >> to[n].chena;
		n++;
	}

	void del() {
		if (n == 0) {
			cout << "!Добавленных товаров нет!" << endl;
			return;
		}
		cout << "Наименование товара:" << endl;
		string toname;
		cin >> toname;
		int ito = -1;
		for (int i = 0; i < n; i++) {
			if (toname == to[i].tov) {
				ito = i;
				break;
			}
		}
		if (ito == -1) {
			cout << "!Такого товара нет!" << endl;
			return;
		}
		to[ito] = to[n - 1];
		n--;
		cout << "Товар успешно удален!" << endl;
	}

	void change() {
		if (n == 0) {
			cout << "!Добавленных товаров нет!" << endl;
			return;
		}
		cout << "Введите наименование товара" << endl;
		string toname;
		cin >> toname;
		int ito = -1;
		for (int i = 0; i < n; i++) {
			if (toname == to[i].tov) {
				cout << "Наименование товара:" << endl;
				cin >> to[i].tov;
				cout << "Материал:" << endl;
				cin >> to[i].material;
				cout << "Цвет:" << endl;
				cin >> to[i].cvet;
				cout << "Размер:" << endl;
				cin >> to[i].razmer;
				cout << "Цена:" << endl;
				cin >> to[i].chena;
				ito = i;
				break;
			}
		}
		if (ito == -1) {
			cout << "!Такого товара нет!" << endl;
			return;
		}
		cout << "Товар успешно отредактирован!" << endl;

	}

	void recording() {
		fout.open("Товары.txt");
		fout << n << endl;
		for (int i = 0; i < n; i++) {
			fout << to[i].tov << endl;
			fout << to[i].material << endl;
			fout << to[i].cvet << endl;
			fout << to[i].razmer << endl;
			fout << to[i].chena << endl;
		}
		fout.close();
	}

	void readZakazes() {
		fin.open("Товары.txt");
		fin >> n;
		fin.ignore();
		for (int i = 0; i < n; i++) {
			getline(fin, to[i].tov);
			getline(fin, to[i].material);
			getline(fin, to[i].cvet);
			cin >> (fin, to[i].razmer);
			cin >> (fin, to[i].chena);
			fin.ignore();
		}
		fin.close();
	}
};

class client {
private:
	human hu[20] = {
		{ "Геннадий","Персиков" },
		{ "Елизавета","Горская" },
		{ "Валерий","Арюпкин" },
	};
public:
	ofstream fout;
	ifstream fin;
	int n = 3;
	void Print() {
		for (int i = 0; i < n; i++) {
			cout << setw(4) << " Имя заказчика:" << setw(11) << (hu + i)->name;
			cout << setw(4) << " Фамилия заказчика:" << setw(11) << (hu + i)->surname << endl;
		}
	}

	void add() {
		if (n == 10) {
			cout << "!Список заказчиков полон!" << endl;
			return;
		}
		cout << "Имя заказчика:" << endl;
		cin >> hu[n].name;
		cout << " Фамилия заказчика:" << endl;
		cin >> hu[n].surname;
		n++;
	}

	void del() {
		if (n == 0) {
			cout << "!Добавленных заказчиков нет!" << endl;
			return;
		}
		cout << "Имя заказчика:" << endl;
		string huname;
		cin >> huname;
		int ihu = -1;
		for (int i = 0; i < n; i++) {
			if (huname == hu[i].name) {
				ihu = i;
				break;
			}
		}
		if (ihu == -1) {
			cout << "!Такого заказчика нет!" << endl;
			return;
		}
		hu[ihu] = hu[n - 1];
		n--;
		cout << "Заказчик успешно удален!" << endl;
	}

	void change() {
		if (n == 0) {
			cout << "!Добавленных заказчиков нет!" << endl;
			return;
		}
		cout << "Введите имя заказчика" << endl;
		string huname;
		cin >> huname;
		int ihu = -1;
		for (int i = 0; i < n; i++) {
			if (huname == hu[i].name) {
				cout << "Имя заказчика:" << endl;
				cin >> hu[i].name;
				cout << "Фамилия заказчика:" << endl;
				cin >> hu[i].surname;
				ihu = i;
				break;
			}
		}
		if (ihu == -1) {
			cout << "!Такого заказчика нет!" << endl;
			return;
		}
		cout << "Заказчик успешно отредактирован!" << endl;

	}

	void recording() {
		fout.open("Заказчики.txt");
		fout << n << endl;
		for (int i = 0; i < n; i++) {
			fout << hu[i].name << endl;
			fout << hu[i].surname << endl;
		}
		fout.close();
	}

	void readZakazes() {
		fin.open("Заказчики.txt");
		fin >> n;
		fin.ignore();
		for (int i = 0; i < n; i++) {
			getline(fin, hu[i].name);
			getline(fin, hu[i].surname);
			fin.ignore();
		}
		fin.close();
	}
};


class worker {
private:
	human poxoron[20] = {
		{ "Жерард","Кутикин" },
		{ "Вячеслав","Бойко" },
		{ "Семён","Жигулёв" },
	};
public:
	ofstream fout;
	ifstream fin;
	int n = 3;
	void Print() {
		for (int i = 0; i < n; i++) {
			cout << setw(12) << " Имя сотрудника:" << setw(18) << (poxoron + i)->name;
			cout << setw(12) << " Фамилия сотрудника:" << setw(18) << (poxoron + i)->surname << endl;
		}
	}

	void add() {
		if (n == 10) {
			cout << "!Список сотрудников полон!" << endl;
			return;
		}
		cout << "Имя сотрудника:" << endl;
		cin >> poxoron[n].name;
		cout << " Фамилия сотрудника:" << endl;
		cin >> poxoron[n].surname;
		n++;
	}

	void del() {
		if (n == 0) {
			cout << "!Добавленных сотрудников нет!" << endl;
			return;
		}
		cout << "Имя сотрудника:" << endl;
		string worname;
		cin >> worname;
		int iwor = -1;
		for (int i = 0; i < n; i++) {
			if (worname == poxoron[i].name) {
				iwor = i;
				break;
			}
		}
		if (iwor == -1) {
			cout << "!Такого сотрудника нет!" << endl;
			return;
		}
		poxoron[iwor] = poxoron[n - 1];
		n--;
		cout << "Сотрудник успешно удален!" << endl;
	}

	void change() {
		if (n == 0) {
			cout << "!Добавленных сотрудников нет!" << endl;
			return;
		}
		cout << "Введите имя сотрудника" << endl;
		string worname;
		cin >> worname;
		int iwor = -1;
		for (int i = 0; i < n; i++) {
			if (worname == poxoron[i].name) {
				cout << "Имя сотрудника:" << endl;
				cin >> poxoron[i].name;
				cout << "Фамилия сотрудника:" << endl;
				cin >> poxoron[i].surname;
				iwor = i;
				break;
			}
		}
		if (iwor == -1) {
			cout << "!Такого сотрудника нет!" << endl;
			return;
		}
		cout << "Сотрудник успешно отредактирован!" << endl;

	}

	void recording() {
		fout.open("Сотрудники.txt");
		fout << n << endl;
		for (int i = 0; i < n; i++) {
			fout << poxoron[i].name << endl;
			fout << poxoron[i].surname << endl;
		}
		fout.close();
	}

	void readZakazes() {
		fin.open("Сотрудники.txt");
		fin >> n;
		fin.ignore();
		for (int i = 0; i < n; i++) {
			getline(fin, poxoron[i].name);
			getline(fin, poxoron[i].surname);
			fin.ignore();
		}
		fin.close();
	}
};

class Zakazes {
private:
	orders zak[20] = {
		{ "Геннадий","Гроб_из_дуба",160 },
		{ "Елизавета","Гроб_из_кедра",165 },
		{ "Валерий","Гроб_из_бука",170 } };

public:
	ofstream fout;
	ifstream fin;
	int n = 3;
	void Print() {
		for (int i = 0; i < n; i++) {
			cout << setw(8) << " Имя заказчика:" << setw(11) << (zak + i)->name;
			cout << setw(8) << " Заказ:" << setw(15) << (zak + i)->buy;
			cout << setw(8) << " Размер:" << setw(11) << (zak + i)->zaka << endl;
		}
	}

	void add() {
		if (n == 10) {
			cout << "!Список заказов полон!" << endl;
			return;
		}
		cout << "Имя заказчика:" << endl;
		cin >> zak[n].name;
		cout << "Заказ:" << endl;
		cin >> zak[n].buy;
		cout << "Размер:" << endl;
		cin >> zak[n].zaka;
		n++;

	}

	void del() {
		if (n == 0) {
			cout << "!Добавленных заказов нет!" << endl;
			return;
		}
		cout << "Имя заказчика:" << endl;
		string zaname;
		cin >> zaname;
		int iza = -1;
		for (int i = 0; i < n; i++) {
			if (zaname == zak[i].name) {
				iza = i;
				break;
			}
		}
		if (iza == -1) {
			cout << "!Такого заказа нет!" << endl;
			return;
		}
		zak[iza] = zak[n - 1];
		n--;
		cout << "Заказ успешно удален!" << endl;
	}

	void change() {
		if (n == 0) {
			cout << "!Добавленных заказов нет!" << endl;
			return;
		}
		cout << "Введите имя заказчика" << endl;
		string zaname;
		cin >> zaname;
		int iza = -1;
		for (int i = 0; i < n; i++) {
			if (zaname == zak[i].name) {
				cout << "Имя заказчика:" << endl;
				cin >> zak[i].name;
				cout << "Заказ:" << endl;
				cin >> zak[i].buy;
				cout << "Размер:" << endl;
				cin >> zak[i].zaka;
				iza = i;
				break;
			}
		}
		if (iza == -1) {
			cout << "!Такого заказа нет!" << endl;
			return;
		}
		cout << "Заказ успешно отредактирован!" << endl;

	}

	void recording() {
		fout.open("Заказы.txt");
		fout << n << endl;
		for (int i = 0; i < n; i++) {
			fout << zak[i].name << endl;
			fout << zak[i].buy << endl;
			fout << zak[i].zaka << endl;
		}
		fout.close();
	}

	void readZakazes() {
		fin.open("Заказы.txt");
		fin >> n;
		fin.ignore();
		for (int i = 0; i < n; i++) {
			getline(fin, zak[i].name);
			getline(fin, zak[i].buy);
			fin >> zak[i].zaka;
			fin.ignore();
		}
		fin.close();
	}
};
class controller : public Zakazes, public worker, public client, public tovar {
private:
	bool work;
public:
	controller() {
		work = 1;
	}
	bool getwork() {
		return work;
	}
	void showMenu() {
		cout << "Меню:" << endl
			<< "(1) Сотрудники:" << endl
			<< "(2) Заказчики:" << endl
			<< "(3) Заказ:" << endl
			<< "(4) Товары:" << endl
			<< "(0) Выход из программы:" << endl;

		while (getMenuItem() == -1);
	}
	void showMenu1() {
		cout << "Меню:" << endl
			<< "(1) Вывод всех сотрудников:" << endl
			<< "(2) Добавление нового сотрудника:" << endl
			<< "(3) Удаление сотрудника с указанным именем:" << endl
			<< "(4) Редактирование сотрудника с указанным именем:" << endl
			<< "(5) Запись списка сотрудников в файл:" << endl
			<< "(6) Считывание списка сотрудников из файла:" << endl
			<< "(7) Выход в главное меню" << endl
			<< "(0) Выход из программы:" << endl;

		while (getMenuItem1() == -1);
	}
	void showMenu2() {
		cout << "Меню:" << endl
			<< "(1) Вывод всех заказчиков:" << endl
			<< "(2) Добавление нового заказчика:" << endl
			<< "(3) Удаление заказчика с указанным именем:" << endl
			<< "(4) Редактирование заказчика с указанным именем:" << endl
			<< "(5) Запись списка заказчиков в файл:" << endl
			<< "(6) Считывание списка заказчиков из файла:" << endl
			<< "(7) Выход в главное меню" << endl
			<< "(0) Выход из программы:" << endl;

		while (getMenuItem2() == -1);
	}
	void showMenu3() {
		cout << "Меню:" << endl
			<< "(1) Вывод всех заказов:" << endl
			<< "(2) Добавление нового заказа:" << endl
			<< "(3) Удаление заказа с указанным именем:" << endl
			<< "(4) Редактирование заказа с указанным именем:" << endl
			<< "(5) Запись списка в файл:" << endl
			<< "(6) Считывание списка заказов из файла:" << endl
			<< "(7) Выход в главное меню" << endl
			<< "(0) Выход из программы:" << endl;

		while (getMenuItem3() == -1);
	}
	void showMenu4() {
		cout << "Меню:" << endl
			<< "(1) Вывод всех товаров:" << endl
			<< "(2) Добавление нового товара:" << endl
			<< "(3) Удаление товара с указанным именем:" << endl
			<< "(4) Редактирование товара с указанным именем:" << endl
			<< "(5) Запись списка в файл:" << endl
			<< "(6) Считывание списка товаров из файла:" << endl
			<< "(7) Выход в главное меню" << endl
			<< "(0) Выход из программы:" << endl;

		while (getMenuItem4() == -1);
	}
	int getMenuItem() {
		char c;
		cout << "Ваш выбор: ";
		cin >> c;

		if (c == '1') {
			showMenu1();
			return 1;
		}
		else if (c == '2') {
			showMenu2();
			return 2;
		}
		else if (c == '3') {
			showMenu3();
			return 3;
		}
		else if (c == '4') {
			showMenu4();
			return 4;
		}
		else if (c == '0') {
			work = 0;
			return 0;
		}

		else {
			return -1;
		}
	}
	int getMenuItem1() {
		char c;
		cout << "Ваш выбор: ";
		cin >> c;

		if (c == '1') {
			worker::Print();
			return 1;
		}
		else if (c == '2') {
			worker::add();
			return 2;
		}
		else if (c == '3') {
			worker::del();
			return 3;
		}
		else if (c == '4') {
			worker::change();
			return 4;
		}
		else if (c == '5') {
			worker::recording();
			return 5;
		}
		else if (c == '6') {
			worker::readZakazes();
			return 6;
		}
		else if (c == '7') {
			showMenu();
			return 7;
		}
		else if (c == '0') {
			work = 0;
			return 0;
		}
		else {
			return -1;
		}
	}
	int getMenuItem2() {
		char c;
		cout << "Ваш выбор: ";
		cin >> c;

		if (c == '1') {
			client::Print();
			return 1;
		}
		else if (c == '2') {
			client::add();
			return 2;
		}
		else if (c == '3') {
			client::del();
			return 3;
		}
		else if (c == '4') {
			client::change();
			return 4;
		}
		else if (c == '5') {
			client::recording();
			return 5;
		}
		else if (c == '6') {
			client::readZakazes();
			return 6;
		}
		else if (c == '7') {
			showMenu();
			return 7;
		}
		else if (c == '0') {
			work = 0;
			return 0;
		}
		else {
			return -1;
		}
	}
	int getMenuItem3() {
		char c;
		cout << "Ваш выбор: ";
		cin >> c;

		if (c == '1') {
			Zakazes::Print();
			return 1;
		}
		else if (c == '2') {
			Zakazes::add();
			return 2;
		}
		else if (c == '3') {
			Zakazes::del();
			return 3;
		}
		else if (c == '4') {
			Zakazes::change();
			return 4;
		}
		else if (c == '5') {
			Zakazes::recording();
			return 5;
		}
		else if (c == '6') {
			Zakazes::readZakazes();
			return 6;
		}
		else if (c == '7') {
			showMenu();
			return 7;
		}
		else if (c == '0') {
			work = 0;
			return 0;
		}
		else {
			return -1;
		}
	}
	int getMenuItem4() {
		char c;
		cout << "Ваш выбор: ";
		cin >> c;

		if (c == '1') {
			tovar::Print();
			return 1;
		}
		else if (c == '2') {
			tovar::add();
			return 2;
		}
		else if (c == '3') {
			tovar::del();
			return 3;
		}
		else if (c == '4') {
			tovar::change();
			return 4;
		}
		else if (c == '5') {
			tovar::recording();
			return 5;
		}
		else if (c == '6') {
			tovar::recording();
			return 6;
		}
		else if (c == '7') {
			showMenu();
			return 7;
		}
		else if (c == '0') {
			work = 0;
			return 0;
		}
		else {
			return -1;
		}
	}
};
int main()
{
	setlocale(LC_ALL, "rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	controller ctrl;
	while (ctrl.getwork())
		ctrl.showMenu();
	return 0;
}
